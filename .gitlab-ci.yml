variables:
  IMAGE_TAG: $CI_COMMIT_SHA
  BRANCH: $CI_COMMIT_REF_NAME
stages:
  - deploy_admin
  - deploy_web

Deploy_Admin:
  stage: deploy_admin
  environment:
    name: k8s
  when: manual
  before_script:
    - echo $(git rev-parse HEAD) | cut -c 1-7
    - ls -l
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_URL
  script:
    - docker build -t $CI_IMAGE_NAME .
    - docker tag $CI_IMAGE_NAME $CI_REGISTRY_IMAGE_URL:$IMAGE_TAG
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_URL
    - docker push $CI_REGISTRY_IMAGE_URL:$IMAGE_TAG
    - cat "$DEPLOYMENT_FILE" > deployment.yaml
    - cat "$KUBE_CONFIG_FILE" > k8s-config.yaml
    - export KUBECONFIG=k8s-config.yaml
    - sed -i "s/latest/${IMAGE_TAG}/g" deployment.yaml
    - kubectl apply -f deployment.yaml --validate=false
  tags:
    - k8s-dev
Deploy_Web:
  stage: deploy_web
  environment:
    name: k8s_web
  when: manual
  before_script:
    - echo $(git rev-parse HEAD) | cut -c 1-7
    - ls -l
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_URL
    - sed -i "s/admin/web-user/g" Dockerfile
    - sed -i "s/admin/web/g" deploy/nginx.conf
  script:
    - docker build -t $CI_IMAGE_NAME .
    - docker tag $CI_IMAGE_NAME $CI_REGISTRY_IMAGE_URL:$IMAGE_TAG
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_URL
    - docker push $CI_REGISTRY_IMAGE_URL:$IMAGE_TAG
    - cat "$DEPLOYMENT_FILE" > deployment.yaml
    - cat "$KUBE_CONFIG_FILE" > k8s-config.yaml
    - export KUBECONFIG=k8s-config.yaml
    - kubectl get pods
    - cat deployment.yaml
    - sed -i "s/latest/${IMAGE_TAG}/g" deployment.yaml
    - kubectl apply -f deployment.yaml --validate=false
  
  tags:
    - k8s-dev
