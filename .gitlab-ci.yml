variables:
  IMAGE_TAG: $CI_COMMIT_SHA
  BRANCH: $CI_COMMIT_REF_NAME
 # DOCKER_DRIVER: overlay2
  #DOCKER_HOST: tcp://docker:2375
  #DOCKER_TLS_CERTDIR: ""

stages:
  - deploy

Deploy_Admin:
  stage: deploy
  environment:
    name: k8s
  when: manual
  before_script:
    - echo $(git rev-parse HEAD) | cut -c 1-7
    - ls -l
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_URL
  script:
    - docker build -t $CI_IMAGE_NAME .
    - docker tag $CI_IMAGE_NAME $CI_REGISTRY_IMAGE_URL:$IMAGE_TAG 
    #- docker tag $CI_IMAGE_NAME $CI_REGISTRY_IMAGE_URL:latest
    #- docker push $CI_REGISTRY_IMAGE_URL:latest
    - docker push $CI_REGISTRY_IMAGE_URL:$IMAGE_TAG

    - cat "$DEPLOYMENT_FILE" > deployment.yaml
    - cat "$KUBE_CONFIG_FILE" > k8s-config.yaml
    - export KUBECONFIG=k8s-config.yaml
    - sed -i "s/latest/${IMAGE_TAG}/g" deployment.yaml
    - kubectl apply -f deployment.yaml --validate=false
  tags:
    - k8s

Deploy_Web:
  stage: deploy
  environment:
    name: k8s_web
  when: manual
  before_script:
    - echo $(git rev-parse HEAD) | cut -c 1-7
    - ls -l
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_URL
    - sed -i "s/admin:build/web-user:build/g" Dockerfile
  script:
    - docker build -t $CI_IMAGE_NAME .
    - docker tag $CI_IMAGE_NAME $CI_REGISTRY_IMAGE_URL:$IMAGE_TAG 
    #- docker tag $CI_IMAGE_NAME $CI_REGISTRY_IMAGE_URL:latest
    #- docker push $CI_REGISTRY_IMAGE_URL:latest
    - docker push $CI_REGISTRY_IMAGE_URL:$IMAGE_TAG

    - cat "$DEPLOYMENT_FILE" > deployment.yaml
    - cat "$KUBE_CONFIG_FILE" > k8s-config.yaml
    - export KUBECONFIG=k8s-config.yaml
    - sed -i "s/latest/${IMAGE_TAG}/g" deployment.yaml
    - kubectl apply -f deployment.yaml --validate=false
  tags:
    - k8s

#test_project:
#    stage: test
#    script:
#        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_URL
#        - docker pull $CI_REGISTRY_IMAGE_URL:$IMAGE_TAG
#        - docker run --name=$BRANCH -p 3002:3002 -i $CI_REGISTRY_IMAGE_URL:$IMAGE_TAG npm run ci
#    tags:
#     - k8s

#deploy_project:
#  stage: deploy
#  environment:
#    name: k8s
#  when: manual
#  before_script:
#    - cat "$DEPLOYMENT_FILE" > deployment.yaml
#    - cat "$KUBE_CONFIG_FILE" > k8s-config.yaml
#  script:
#    - export KUBECONFIG=k8s-config.yaml
#    - sed -i "s/latest/${IMAGE_TAG}/g" deployment.yaml
#    - kubectl apply -f deployment.yaml --validate=false
#  tags:
#    - k8s
